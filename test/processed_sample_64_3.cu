
#define uint unsigned int
#define uchar unsigned char
#define ushort unsigned short
#define int64_t long long
#define uint64_t unsigned long long

extern "C" {

__device__ __forceinline__ void AsmBlockSync(int name, int numThreads) {
  asm volatile("bar.sync %0, %1;" : : "r"(name), "r"(numThreads) : "memory");
}


__device__ __forceinline__ void AsmWarpSync(const unsigned threadsmask) {
  asm volatile("bar.warp.sync %0;" : : "r"(threadsmask) : "memory");
}

__device__ __forceinline__ void default_function_kernel0_block_0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_batch_matmul_NT, char* shared_buffer, const uint& block_idx, const uint& thread_idx) {
  if (thread_idx >= 32){
    return;
  }
  const dim3 gridDim(256, 1, 1);
  const dim3 blockDim(32, 1, 1);

  const dim3 blockIdx(block_idx);
  float* placeholder_d_shared = (float*)(shared_buffer + 0);
  float* placeholder_shared = (float*)(shared_buffer + 4096);

  float T_batch_matmul_NT_local[4];
  T_batch_matmul_NT_local[0] = 0.000000e+00f;
  T_batch_matmul_NT_local[1] = 0.000000e+00f;
  T_batch_matmul_NT_local[2] = 0.000000e+00f;
  T_batch_matmul_NT_local[3] = 0.000000e+00f;
  *(float2*)(placeholder_d_shared + (((int)threadIdx.x) * 2)) = *(float2*)(placeholder + ((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 64)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 64));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 128)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 128));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 192)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 192));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 256)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 256));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 320)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 320));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 384)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 384));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 448)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 448));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 512)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4096));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 576)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4160));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 640)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4224));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 704)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4288));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 768)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4352));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 832)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4416));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 896)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4480));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 960)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4544));
  placeholder_shared[((int)threadIdx.x)] = placeholder1[((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x))];
  placeholder_shared[(((int)threadIdx.x) + 32)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 32)];
  placeholder_shared[(((int)threadIdx.x) + 64)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 64)];
  placeholder_shared[(((int)threadIdx.x) + 96)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 96)];
  placeholder_shared[(((int)threadIdx.x) + 128)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 128)];
  placeholder_shared[(((int)threadIdx.x) + 160)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 160)];
  placeholder_shared[(((int)threadIdx.x) + 192)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 192)];
  placeholder_shared[(((int)threadIdx.x) + 224)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 224)];
  placeholder_shared[(((int)threadIdx.x) + 256)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 256)];
  placeholder_shared[(((int)threadIdx.x) + 288)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 288)];
  placeholder_shared[(((int)threadIdx.x) + 320)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 320)];
  placeholder_shared[(((int)threadIdx.x) + 352)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 352)];
  placeholder_shared[(((int)threadIdx.x) + 384)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 384)];
  placeholder_shared[(((int)threadIdx.x) + 416)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 416)];
  placeholder_shared[(((int)threadIdx.x) + 448)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 448)];
  placeholder_shared[(((int)threadIdx.x) + 480)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 480)];
  placeholder_shared[(((int)threadIdx.x) + 512)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4096)];
  placeholder_shared[(((int)threadIdx.x) + 544)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4128)];
  placeholder_shared[(((int)threadIdx.x) + 576)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4160)];
  placeholder_shared[(((int)threadIdx.x) + 608)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4192)];
  placeholder_shared[(((int)threadIdx.x) + 640)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4224)];
  placeholder_shared[(((int)threadIdx.x) + 672)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4256)];
  placeholder_shared[(((int)threadIdx.x) + 704)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4288)];
  placeholder_shared[(((int)threadIdx.x) + 736)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4320)];
  placeholder_shared[(((int)threadIdx.x) + 768)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4352)];
  placeholder_shared[(((int)threadIdx.x) + 800)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4384)];
  placeholder_shared[(((int)threadIdx.x) + 832)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4416)];
  placeholder_shared[(((int)threadIdx.x) + 864)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4448)];
  placeholder_shared[(((int)threadIdx.x) + 896)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4480)];
  placeholder_shared[(((int)threadIdx.x) + 928)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4512)];
  placeholder_shared[(((int)threadIdx.x) + 960)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4544)];
  placeholder_shared[(((int)threadIdx.x) + 992)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4576)];
  AsmBlockSync(0, 32);
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[(((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256))]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 64)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 128)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 192)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 1)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 65)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 129)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 193)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 2)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 66)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 130)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 194)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 3)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 67)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 131)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 195)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 4)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 68)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 132)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 196)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 5)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 69)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 133)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 197)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 6)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 70)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 134)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 198)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 7)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 71)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 135)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 199)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 8)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 72)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 136)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 200)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 9)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 73)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 137)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 201)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 10)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 74)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 138)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 202)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 11)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 75)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 139)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 203)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 12)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 76)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 140)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 204)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 13)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 77)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 141)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 205)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 14)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 78)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 142)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 206)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 15)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 79)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 143)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 207)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 16)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 80)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 144)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 208)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 17)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 81)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 145)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 209)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 18)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 82)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 146)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 210)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 19)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 83)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 147)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 211)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 20)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 84)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 148)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 212)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 21)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 85)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 149)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 213)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 22)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 86)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 150)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 214)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 23)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 87)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 151)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 215)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 24)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 88)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 152)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 216)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 25)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 89)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 153)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 217)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 26)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 90)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 154)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 218)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 27)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 91)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 155)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 219)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 28)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 92)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 156)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 220)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 29)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 93)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 157)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 221)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 30)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 94)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 158)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 222)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 31)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 95)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 159)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 223)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 32)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 96)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 160)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 224)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 33)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 97)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 161)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 225)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 34)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 98)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 162)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 226)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 35)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 99)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 163)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 227)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 36)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 100)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 164)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 228)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 37)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 101)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 165)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 229)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 38)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 102)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 166)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 230)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 39)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 103)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 167)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 231)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 40)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 104)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 168)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 232)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 41)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 105)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 169)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 233)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 42)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 106)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 170)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 234)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 43)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 107)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 171)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 235)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 44)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 108)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 172)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 236)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 45)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 109)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 173)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 237)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 46)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 110)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 174)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 238)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 47)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 111)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 175)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 239)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 48)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 112)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 176)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 240)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 49)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 113)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 177)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 241)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 50)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 114)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 178)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 242)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 51)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 115)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 179)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 243)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 52)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 116)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 180)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 244)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 53)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 117)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 181)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 245)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 54)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 118)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 182)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 246)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 55)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 119)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 183)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 247)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 56)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 120)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 184)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 248)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 57)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 121)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 185)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 249)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 58)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 122)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 186)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 250)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 59)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 123)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 187)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 251)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 60)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 124)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 188)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 252)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 61)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 125)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 189)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 253)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 62)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 126)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 190)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 254)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 63)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 127)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 191)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 255)]));
  for (int j_inner = 0; j_inner < 4; ++j_inner) {
    T_batch_matmul_NT[((((((((((int)blockIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) >> 4) * 4096)) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((((int)threadIdx.x) & 15) >> 1) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + j_inner)] = T_batch_matmul_NT_local[j_inner];
  }
}

__device__ __forceinline__ void default_function_kernel0_block_1(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_batch_matmul_NT, char* shared_buffer, const uint& block_idx, const uint& thread_idx) {
  if (thread_idx >= 32){
    return;
  }
  const dim3 gridDim(256, 1, 1);
  const dim3 blockDim(32, 1, 1);

  const dim3 blockIdx(block_idx);
  float* placeholder_d_shared = (float*)(shared_buffer + 0);
  float* placeholder_shared = (float*)(shared_buffer + 4096);

  float T_batch_matmul_NT_local[4];
  T_batch_matmul_NT_local[0] = 0.000000e+00f;
  T_batch_matmul_NT_local[1] = 0.000000e+00f;
  T_batch_matmul_NT_local[2] = 0.000000e+00f;
  T_batch_matmul_NT_local[3] = 0.000000e+00f;
  *(float2*)(placeholder_d_shared + (((int)threadIdx.x) * 2)) = *(float2*)(placeholder + ((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 64)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 64));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 128)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 128));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 192)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 192));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 256)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 256));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 320)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 320));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 384)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 384));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 448)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 448));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 512)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4096));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 576)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4160));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 640)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4224));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 704)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4288));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 768)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4352));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 832)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4416));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 896)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4480));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 960)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4544));
  placeholder_shared[((int)threadIdx.x)] = placeholder1[((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x))];
  placeholder_shared[(((int)threadIdx.x) + 32)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 32)];
  placeholder_shared[(((int)threadIdx.x) + 64)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 64)];
  placeholder_shared[(((int)threadIdx.x) + 96)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 96)];
  placeholder_shared[(((int)threadIdx.x) + 128)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 128)];
  placeholder_shared[(((int)threadIdx.x) + 160)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 160)];
  placeholder_shared[(((int)threadIdx.x) + 192)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 192)];
  placeholder_shared[(((int)threadIdx.x) + 224)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 224)];
  placeholder_shared[(((int)threadIdx.x) + 256)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 256)];
  placeholder_shared[(((int)threadIdx.x) + 288)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 288)];
  placeholder_shared[(((int)threadIdx.x) + 320)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 320)];
  placeholder_shared[(((int)threadIdx.x) + 352)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 352)];
  placeholder_shared[(((int)threadIdx.x) + 384)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 384)];
  placeholder_shared[(((int)threadIdx.x) + 416)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 416)];
  placeholder_shared[(((int)threadIdx.x) + 448)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 448)];
  placeholder_shared[(((int)threadIdx.x) + 480)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 480)];
  placeholder_shared[(((int)threadIdx.x) + 512)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4096)];
  placeholder_shared[(((int)threadIdx.x) + 544)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4128)];
  placeholder_shared[(((int)threadIdx.x) + 576)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4160)];
  placeholder_shared[(((int)threadIdx.x) + 608)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4192)];
  placeholder_shared[(((int)threadIdx.x) + 640)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4224)];
  placeholder_shared[(((int)threadIdx.x) + 672)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4256)];
  placeholder_shared[(((int)threadIdx.x) + 704)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4288)];
  placeholder_shared[(((int)threadIdx.x) + 736)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4320)];
  placeholder_shared[(((int)threadIdx.x) + 768)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4352)];
  placeholder_shared[(((int)threadIdx.x) + 800)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4384)];
  placeholder_shared[(((int)threadIdx.x) + 832)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4416)];
  placeholder_shared[(((int)threadIdx.x) + 864)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4448)];
  placeholder_shared[(((int)threadIdx.x) + 896)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4480)];
  placeholder_shared[(((int)threadIdx.x) + 928)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4512)];
  placeholder_shared[(((int)threadIdx.x) + 960)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4544)];
  placeholder_shared[(((int)threadIdx.x) + 992)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4576)];
  AsmBlockSync(1, 32);
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[(((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256))]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 64)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 128)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 192)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 1)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 65)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 129)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 193)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 2)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 66)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 130)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 194)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 3)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 67)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 131)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 195)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 4)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 68)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 132)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 196)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 5)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 69)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 133)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 197)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 6)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 70)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 134)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 198)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 7)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 71)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 135)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 199)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 8)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 72)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 136)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 200)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 9)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 73)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 137)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 201)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 10)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 74)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 138)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 202)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 11)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 75)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 139)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 203)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 12)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 76)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 140)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 204)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 13)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 77)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 141)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 205)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 14)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 78)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 142)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 206)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 15)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 79)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 143)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 207)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 16)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 80)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 144)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 208)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 17)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 81)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 145)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 209)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 18)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 82)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 146)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 210)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 19)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 83)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 147)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 211)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 20)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 84)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 148)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 212)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 21)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 85)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 149)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 213)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 22)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 86)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 150)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 214)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 23)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 87)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 151)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 215)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 24)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 88)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 152)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 216)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 25)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 89)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 153)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 217)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 26)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 90)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 154)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 218)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 27)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 91)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 155)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 219)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 28)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 92)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 156)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 220)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 29)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 93)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 157)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 221)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 30)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 94)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 158)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 222)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 31)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 95)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 159)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 223)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 32)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 96)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 160)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 224)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 33)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 97)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 161)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 225)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 34)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 98)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 162)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 226)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 35)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 99)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 163)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 227)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 36)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 100)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 164)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 228)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 37)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 101)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 165)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 229)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 38)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 102)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 166)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 230)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 39)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 103)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 167)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 231)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 40)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 104)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 168)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 232)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 41)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 105)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 169)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 233)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 42)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 106)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 170)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 234)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 43)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 107)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 171)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 235)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 44)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 108)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 172)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 236)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 45)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 109)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 173)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 237)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 46)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 110)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 174)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 238)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 47)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 111)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 175)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 239)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 48)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 112)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 176)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 240)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 49)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 113)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 177)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 241)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 50)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 114)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 178)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 242)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 51)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 115)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 179)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 243)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 52)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 116)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 180)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 244)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 53)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 117)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 181)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 245)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 54)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 118)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 182)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 246)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 55)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 119)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 183)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 247)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 56)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 120)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 184)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 248)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 57)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 121)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 185)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 249)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 58)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 122)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 186)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 250)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 59)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 123)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 187)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 251)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 60)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 124)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 188)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 252)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 61)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 125)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 189)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 253)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 62)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 126)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 190)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 254)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 63)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 127)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 191)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 255)]));
  for (int j_inner = 0; j_inner < 4; ++j_inner) {
    T_batch_matmul_NT[((((((((((int)blockIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) >> 4) * 4096)) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((((int)threadIdx.x) & 15) >> 1) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + j_inner)] = T_batch_matmul_NT_local[j_inner];
  }
}

__device__ __forceinline__ void default_function_kernel0_block_2(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_batch_matmul_NT, char* shared_buffer, const uint& block_idx, const uint& thread_idx) {
  if (thread_idx >= 32){
    return;
  }
  const dim3 gridDim(256, 1, 1);
  const dim3 blockDim(32, 1, 1);

  const dim3 blockIdx(block_idx);
  float* placeholder_d_shared = (float*)(shared_buffer + 0);
  float* placeholder_shared = (float*)(shared_buffer + 4096);

  float T_batch_matmul_NT_local[4];
  T_batch_matmul_NT_local[0] = 0.000000e+00f;
  T_batch_matmul_NT_local[1] = 0.000000e+00f;
  T_batch_matmul_NT_local[2] = 0.000000e+00f;
  T_batch_matmul_NT_local[3] = 0.000000e+00f;
  *(float2*)(placeholder_d_shared + (((int)threadIdx.x) * 2)) = *(float2*)(placeholder + ((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 64)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 64));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 128)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 128));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 192)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 192));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 256)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 256));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 320)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 320));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 384)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 384));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 448)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 448));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 512)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4096));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 576)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4160));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 640)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4224));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 704)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4288));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 768)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4352));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 832)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4416));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 896)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4480));
  *(float2*)(placeholder_d_shared + ((((int)threadIdx.x) * 2) + 960)) = *(float2*)(placeholder + (((((((int)blockIdx.x) >> 6) * 8192) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((int)threadIdx.x) * 2)) + 4544));
  placeholder_shared[((int)threadIdx.x)] = placeholder1[((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x))];
  placeholder_shared[(((int)threadIdx.x) + 32)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 32)];
  placeholder_shared[(((int)threadIdx.x) + 64)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 64)];
  placeholder_shared[(((int)threadIdx.x) + 96)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 96)];
  placeholder_shared[(((int)threadIdx.x) + 128)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 128)];
  placeholder_shared[(((int)threadIdx.x) + 160)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 160)];
  placeholder_shared[(((int)threadIdx.x) + 192)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 192)];
  placeholder_shared[(((int)threadIdx.x) + 224)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 224)];
  placeholder_shared[(((int)threadIdx.x) + 256)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 256)];
  placeholder_shared[(((int)threadIdx.x) + 288)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 288)];
  placeholder_shared[(((int)threadIdx.x) + 320)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 320)];
  placeholder_shared[(((int)threadIdx.x) + 352)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 352)];
  placeholder_shared[(((int)threadIdx.x) + 384)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 384)];
  placeholder_shared[(((int)threadIdx.x) + 416)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 416)];
  placeholder_shared[(((int)threadIdx.x) + 448)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 448)];
  placeholder_shared[(((int)threadIdx.x) + 480)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 480)];
  placeholder_shared[(((int)threadIdx.x) + 512)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4096)];
  placeholder_shared[(((int)threadIdx.x) + 544)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4128)];
  placeholder_shared[(((int)threadIdx.x) + 576)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4160)];
  placeholder_shared[(((int)threadIdx.x) + 608)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4192)];
  placeholder_shared[(((int)threadIdx.x) + 640)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4224)];
  placeholder_shared[(((int)threadIdx.x) + 672)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4256)];
  placeholder_shared[(((int)threadIdx.x) + 704)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4288)];
  placeholder_shared[(((int)threadIdx.x) + 736)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4320)];
  placeholder_shared[(((int)threadIdx.x) + 768)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4352)];
  placeholder_shared[(((int)threadIdx.x) + 800)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4384)];
  placeholder_shared[(((int)threadIdx.x) + 832)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4416)];
  placeholder_shared[(((int)threadIdx.x) + 864)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4448)];
  placeholder_shared[(((int)threadIdx.x) + 896)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4480)];
  placeholder_shared[(((int)threadIdx.x) + 928)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4512)];
  placeholder_shared[(((int)threadIdx.x) + 960)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4544)];
  placeholder_shared[(((int)threadIdx.x) + 992)] = placeholder1[(((((((int)blockIdx.x) >> 6) * 8192) + ((((int)blockIdx.x) & 7) * 512)) + ((int)threadIdx.x)) + 4576)];
  AsmBlockSync(2, 32);
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[(((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256))]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 64)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 128)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[((((int)threadIdx.x) >> 1) * 64)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 192)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 1)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 65)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 129)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 1)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 193)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 2)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 66)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 130)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 2)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 194)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 3)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 67)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 131)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 3)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 195)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 4)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 68)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 132)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 4)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 196)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 5)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 69)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 133)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 5)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 197)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 6)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 70)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 134)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 6)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 198)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 7)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 71)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 135)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 7)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 199)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 8)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 72)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 136)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 8)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 200)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 9)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 73)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 137)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 9)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 201)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 10)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 74)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 138)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 10)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 202)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 11)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 75)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 139)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 11)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 203)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 12)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 76)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 140)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 12)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 204)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 13)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 77)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 141)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 13)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 205)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 14)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 78)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 142)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 14)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 206)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 15)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 79)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 143)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 15)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 207)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 16)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 80)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 144)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 16)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 208)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 17)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 81)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 145)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 17)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 209)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 18)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 82)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 146)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 18)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 210)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 19)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 83)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 147)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 19)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 211)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 20)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 84)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 148)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 20)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 212)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 21)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 85)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 149)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 21)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 213)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 22)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 86)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 150)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 22)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 214)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 23)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 87)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 151)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 23)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 215)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 24)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 88)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 152)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 24)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 216)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 25)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 89)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 153)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 25)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 217)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 26)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 90)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 154)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 26)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 218)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 27)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 91)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 155)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 27)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 219)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 28)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 92)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 156)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 28)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 220)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 29)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 93)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 157)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 29)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 221)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 30)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 94)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 158)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 30)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 222)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 31)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 95)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 159)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 31)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 223)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 32)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 96)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 160)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 32)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 224)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 33)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 97)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 161)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 33)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 225)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 34)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 98)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 162)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 34)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 226)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 35)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 99)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 163)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 35)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 227)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 36)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 100)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 164)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 36)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 228)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 37)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 101)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 165)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 37)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 229)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 38)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 102)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 166)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 38)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 230)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 39)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 103)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 167)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 39)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 231)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 40)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 104)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 168)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 40)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 232)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 41)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 105)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 169)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 41)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 233)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 42)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 106)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 170)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 42)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 234)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 43)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 107)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 171)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 43)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 235)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 44)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 108)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 172)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 44)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 236)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 45)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 109)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 173)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 45)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 237)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 46)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 110)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 174)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 46)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 238)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 47)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 111)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 175)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 47)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 239)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 48)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 112)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 176)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 48)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 240)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 49)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 113)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 177)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 49)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 241)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 50)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 114)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 178)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 50)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 242)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 51)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 115)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 179)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 51)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 243)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 52)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 116)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 180)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 52)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 244)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 53)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 117)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 181)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 53)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 245)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 54)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 118)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 182)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 54)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 246)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 55)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 119)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 183)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 55)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 247)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 56)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 120)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 184)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 56)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 248)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 57)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 121)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 185)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 57)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 249)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 58)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 122)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 186)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 58)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 250)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 59)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 123)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 187)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 59)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 251)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 60)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 124)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 188)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 60)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 252)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 61)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 125)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 189)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 61)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 253)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 62)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 126)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 190)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 62)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 254)]));
  T_batch_matmul_NT_local[0] = (T_batch_matmul_NT_local[0] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 63)]));
  T_batch_matmul_NT_local[1] = (T_batch_matmul_NT_local[1] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 127)]));
  T_batch_matmul_NT_local[2] = (T_batch_matmul_NT_local[2] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 191)]));
  T_batch_matmul_NT_local[3] = (T_batch_matmul_NT_local[3] + (placeholder_d_shared[(((((int)threadIdx.x) >> 1) * 64) + 63)] * placeholder_shared[((((((int)threadIdx.x) >> 4) * 512) + ((((int)threadIdx.x) & 1) * 256)) + 255)]));
  for (int j_inner = 0; j_inner < 4; ++j_inner) {
    T_batch_matmul_NT[((((((((((int)blockIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) >> 4) * 4096)) + (((((int)blockIdx.x) & 63) >> 3) * 512)) + (((((int)threadIdx.x) & 15) >> 1) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + j_inner)] = T_batch_matmul_NT_local[j_inner];
  }
}

__global__ void __launch_bounds__(32) sample(float* __restrict__ placeholder[], float* __restrict__ T_batch_matmul_NT[], float* __restrict__ placeholder1[], uint sample_0_capacity, uint sample_1_capacity, uint sample_2_capacity, uint sample_3_capacity, uint sample_4_capacity, uint sample_5_capacity, uint sample_6_capacity, uint sample_7_capacity, uint sample_8_capacity, uint sample_9_capacity, uint sample_10_capacity, uint sample_11_capacity, uint sample_12_capacity, uint sample_13_capacity, uint sample_14_capacity, uint sample_15_capacity, uint sample_16_capacity, uint sample_17_capacity, uint sample_18_capacity, uint sample_19_capacity, uint sample_20_capacity, uint sample_21_capacity, uint sample_22_capacity, uint sample_23_capacity, uint sample_24_capacity, uint sample_25_capacity, uint sample_26_capacity, uint sample_27_capacity, uint sample_28_capacity, uint sample_29_capacity, uint sample_30_capacity, uint sample_31_capacity, uint sample_32_capacity, uint sample_33_capacity, uint sample_34_capacity, uint sample_35_capacity, uint sample_36_capacity, uint sample_37_capacity, uint sample_38_capacity, uint sample_39_capacity, uint sample_40_capacity, uint sample_41_capacity, uint sample_42_capacity, uint sample_43_capacity, uint sample_44_capacity, uint sample_45_capacity, uint sample_46_capacity, uint sample_47_capacity, uint sample_48_capacity, uint sample_49_capacity, uint sample_50_capacity, uint sample_51_capacity, uint sample_52_capacity, uint sample_53_capacity, uint sample_54_capacity, uint sample_55_capacity, uint sample_56_capacity, uint sample_57_capacity, uint sample_58_capacity, uint sample_59_capacity, uint sample_60_capacity, uint sample_61_capacity, uint sample_62_capacity, uint sample_63_capacity) {
  // [kernel_type] homo_fuse
  // [thread_extent] blockIdx.xdim = [256, 256, 256]
  // [thread_extent] blockIdx.ydim = 1
  // [thread_extent] blockIdx.zdim = 1
  // [thread_extent] threadIdx.xdim = [32, 32, 32]
  // [thread_extent] threadIdx.ydim = 1
  // [thread_extent] threadIdx.zdim = 1

  int capacity_dims[3];
  capacity_dims[0] = 256;
  capacity_dims[1] = 256;
  capacity_dims[2] = 256;
  __shared__ char shared_buffer[8192];
  if (blockIdx.x < (capacity_dims[sample_0_capacity])) {
    switch (sample_0_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[0], T_batch_matmul_NT[0], placeholder1[0], shared_buffer, blockIdx.x - 0, threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[0], T_batch_matmul_NT[0], placeholder1[0], shared_buffer, blockIdx.x - 0, threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[0], T_batch_matmul_NT[0], placeholder1[0], shared_buffer, blockIdx.x - 0, threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity])) {
    switch (sample_1_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[1], T_batch_matmul_NT[1], placeholder1[1], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[1], T_batch_matmul_NT[1], placeholder1[1], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[1], T_batch_matmul_NT[1], placeholder1[1], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity])) {
    switch (sample_2_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[2], T_batch_matmul_NT[2], placeholder1[2], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[2], T_batch_matmul_NT[2], placeholder1[2], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[2], T_batch_matmul_NT[2], placeholder1[2], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity])) {
    switch (sample_3_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[3], T_batch_matmul_NT[3], placeholder1[3], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[3], T_batch_matmul_NT[3], placeholder1[3], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[3], T_batch_matmul_NT[3], placeholder1[3], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity])) {
    switch (sample_4_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[4], T_batch_matmul_NT[4], placeholder1[4], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[4], T_batch_matmul_NT[4], placeholder1[4], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[4], T_batch_matmul_NT[4], placeholder1[4], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity])) {
    switch (sample_5_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[5], T_batch_matmul_NT[5], placeholder1[5], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[5], T_batch_matmul_NT[5], placeholder1[5], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[5], T_batch_matmul_NT[5], placeholder1[5], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity])) {
    switch (sample_6_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[6], T_batch_matmul_NT[6], placeholder1[6], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[6], T_batch_matmul_NT[6], placeholder1[6], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[6], T_batch_matmul_NT[6], placeholder1[6], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity])) {
    switch (sample_7_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[7], T_batch_matmul_NT[7], placeholder1[7], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[7], T_batch_matmul_NT[7], placeholder1[7], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[7], T_batch_matmul_NT[7], placeholder1[7], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity])) {
    switch (sample_8_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[8], T_batch_matmul_NT[8], placeholder1[8], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[8], T_batch_matmul_NT[8], placeholder1[8], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[8], T_batch_matmul_NT[8], placeholder1[8], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity])) {
    switch (sample_9_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[9], T_batch_matmul_NT[9], placeholder1[9], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[9], T_batch_matmul_NT[9], placeholder1[9], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[9], T_batch_matmul_NT[9], placeholder1[9], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity])) {
    switch (sample_10_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[10], T_batch_matmul_NT[10], placeholder1[10], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[10], T_batch_matmul_NT[10], placeholder1[10], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[10], T_batch_matmul_NT[10], placeholder1[10], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity])) {
    switch (sample_11_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[11], T_batch_matmul_NT[11], placeholder1[11], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[11], T_batch_matmul_NT[11], placeholder1[11], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[11], T_batch_matmul_NT[11], placeholder1[11], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity])) {
    switch (sample_12_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[12], T_batch_matmul_NT[12], placeholder1[12], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[12], T_batch_matmul_NT[12], placeholder1[12], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[12], T_batch_matmul_NT[12], placeholder1[12], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity])) {
    switch (sample_13_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[13], T_batch_matmul_NT[13], placeholder1[13], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[13], T_batch_matmul_NT[13], placeholder1[13], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[13], T_batch_matmul_NT[13], placeholder1[13], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity])) {
    switch (sample_14_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[14], T_batch_matmul_NT[14], placeholder1[14], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[14], T_batch_matmul_NT[14], placeholder1[14], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[14], T_batch_matmul_NT[14], placeholder1[14], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity])) {
    switch (sample_15_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[15], T_batch_matmul_NT[15], placeholder1[15], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[15], T_batch_matmul_NT[15], placeholder1[15], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[15], T_batch_matmul_NT[15], placeholder1[15], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity])) {
    switch (sample_16_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[16], T_batch_matmul_NT[16], placeholder1[16], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[16], T_batch_matmul_NT[16], placeholder1[16], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[16], T_batch_matmul_NT[16], placeholder1[16], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity])) {
    switch (sample_17_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[17], T_batch_matmul_NT[17], placeholder1[17], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[17], T_batch_matmul_NT[17], placeholder1[17], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[17], T_batch_matmul_NT[17], placeholder1[17], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity])) {
    switch (sample_18_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[18], T_batch_matmul_NT[18], placeholder1[18], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[18], T_batch_matmul_NT[18], placeholder1[18], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[18], T_batch_matmul_NT[18], placeholder1[18], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity])) {
    switch (sample_19_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[19], T_batch_matmul_NT[19], placeholder1[19], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[19], T_batch_matmul_NT[19], placeholder1[19], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[19], T_batch_matmul_NT[19], placeholder1[19], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity])) {
    switch (sample_20_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[20], T_batch_matmul_NT[20], placeholder1[20], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[20], T_batch_matmul_NT[20], placeholder1[20], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[20], T_batch_matmul_NT[20], placeholder1[20], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity])) {
    switch (sample_21_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[21], T_batch_matmul_NT[21], placeholder1[21], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[21], T_batch_matmul_NT[21], placeholder1[21], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[21], T_batch_matmul_NT[21], placeholder1[21], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity])) {
    switch (sample_22_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[22], T_batch_matmul_NT[22], placeholder1[22], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[22], T_batch_matmul_NT[22], placeholder1[22], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[22], T_batch_matmul_NT[22], placeholder1[22], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity])) {
    switch (sample_23_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[23], T_batch_matmul_NT[23], placeholder1[23], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[23], T_batch_matmul_NT[23], placeholder1[23], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[23], T_batch_matmul_NT[23], placeholder1[23], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity])) {
    switch (sample_24_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[24], T_batch_matmul_NT[24], placeholder1[24], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[24], T_batch_matmul_NT[24], placeholder1[24], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[24], T_batch_matmul_NT[24], placeholder1[24], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity])) {
    switch (sample_25_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[25], T_batch_matmul_NT[25], placeholder1[25], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[25], T_batch_matmul_NT[25], placeholder1[25], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[25], T_batch_matmul_NT[25], placeholder1[25], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity])) {
    switch (sample_26_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[26], T_batch_matmul_NT[26], placeholder1[26], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[26], T_batch_matmul_NT[26], placeholder1[26], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[26], T_batch_matmul_NT[26], placeholder1[26], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity])) {
    switch (sample_27_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[27], T_batch_matmul_NT[27], placeholder1[27], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[27], T_batch_matmul_NT[27], placeholder1[27], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[27], T_batch_matmul_NT[27], placeholder1[27], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity])) {
    switch (sample_28_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[28], T_batch_matmul_NT[28], placeholder1[28], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[28], T_batch_matmul_NT[28], placeholder1[28], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[28], T_batch_matmul_NT[28], placeholder1[28], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity])) {
    switch (sample_29_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[29], T_batch_matmul_NT[29], placeholder1[29], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[29], T_batch_matmul_NT[29], placeholder1[29], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[29], T_batch_matmul_NT[29], placeholder1[29], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity])) {
    switch (sample_30_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[30], T_batch_matmul_NT[30], placeholder1[30], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[30], T_batch_matmul_NT[30], placeholder1[30], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[30], T_batch_matmul_NT[30], placeholder1[30], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity])) {
    switch (sample_31_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[31], T_batch_matmul_NT[31], placeholder1[31], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[31], T_batch_matmul_NT[31], placeholder1[31], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[31], T_batch_matmul_NT[31], placeholder1[31], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity])) {
    switch (sample_32_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[32], T_batch_matmul_NT[32], placeholder1[32], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[32], T_batch_matmul_NT[32], placeholder1[32], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[32], T_batch_matmul_NT[32], placeholder1[32], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity])) {
    switch (sample_33_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[33], T_batch_matmul_NT[33], placeholder1[33], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[33], T_batch_matmul_NT[33], placeholder1[33], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[33], T_batch_matmul_NT[33], placeholder1[33], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity])) {
    switch (sample_34_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[34], T_batch_matmul_NT[34], placeholder1[34], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[34], T_batch_matmul_NT[34], placeholder1[34], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[34], T_batch_matmul_NT[34], placeholder1[34], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity])) {
    switch (sample_35_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[35], T_batch_matmul_NT[35], placeholder1[35], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[35], T_batch_matmul_NT[35], placeholder1[35], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[35], T_batch_matmul_NT[35], placeholder1[35], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity])) {
    switch (sample_36_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[36], T_batch_matmul_NT[36], placeholder1[36], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[36], T_batch_matmul_NT[36], placeholder1[36], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[36], T_batch_matmul_NT[36], placeholder1[36], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity])) {
    switch (sample_37_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[37], T_batch_matmul_NT[37], placeholder1[37], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[37], T_batch_matmul_NT[37], placeholder1[37], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[37], T_batch_matmul_NT[37], placeholder1[37], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity])) {
    switch (sample_38_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[38], T_batch_matmul_NT[38], placeholder1[38], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[38], T_batch_matmul_NT[38], placeholder1[38], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[38], T_batch_matmul_NT[38], placeholder1[38], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity])) {
    switch (sample_39_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[39], T_batch_matmul_NT[39], placeholder1[39], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[39], T_batch_matmul_NT[39], placeholder1[39], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[39], T_batch_matmul_NT[39], placeholder1[39], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity])) {
    switch (sample_40_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[40], T_batch_matmul_NT[40], placeholder1[40], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[40], T_batch_matmul_NT[40], placeholder1[40], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[40], T_batch_matmul_NT[40], placeholder1[40], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity])) {
    switch (sample_41_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[41], T_batch_matmul_NT[41], placeholder1[41], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[41], T_batch_matmul_NT[41], placeholder1[41], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[41], T_batch_matmul_NT[41], placeholder1[41], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity])) {
    switch (sample_42_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[42], T_batch_matmul_NT[42], placeholder1[42], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[42], T_batch_matmul_NT[42], placeholder1[42], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[42], T_batch_matmul_NT[42], placeholder1[42], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity])) {
    switch (sample_43_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[43], T_batch_matmul_NT[43], placeholder1[43], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[43], T_batch_matmul_NT[43], placeholder1[43], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[43], T_batch_matmul_NT[43], placeholder1[43], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity])) {
    switch (sample_44_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[44], T_batch_matmul_NT[44], placeholder1[44], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[44], T_batch_matmul_NT[44], placeholder1[44], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[44], T_batch_matmul_NT[44], placeholder1[44], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity])) {
    switch (sample_45_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[45], T_batch_matmul_NT[45], placeholder1[45], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[45], T_batch_matmul_NT[45], placeholder1[45], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[45], T_batch_matmul_NT[45], placeholder1[45], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity])) {
    switch (sample_46_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[46], T_batch_matmul_NT[46], placeholder1[46], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[46], T_batch_matmul_NT[46], placeholder1[46], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[46], T_batch_matmul_NT[46], placeholder1[46], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity])) {
    switch (sample_47_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[47], T_batch_matmul_NT[47], placeholder1[47], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[47], T_batch_matmul_NT[47], placeholder1[47], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[47], T_batch_matmul_NT[47], placeholder1[47], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity])) {
    switch (sample_48_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[48], T_batch_matmul_NT[48], placeholder1[48], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[48], T_batch_matmul_NT[48], placeholder1[48], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[48], T_batch_matmul_NT[48], placeholder1[48], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity])) {
    switch (sample_49_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[49], T_batch_matmul_NT[49], placeholder1[49], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[49], T_batch_matmul_NT[49], placeholder1[49], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[49], T_batch_matmul_NT[49], placeholder1[49], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity])) {
    switch (sample_50_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[50], T_batch_matmul_NT[50], placeholder1[50], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[50], T_batch_matmul_NT[50], placeholder1[50], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[50], T_batch_matmul_NT[50], placeholder1[50], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity])) {
    switch (sample_51_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[51], T_batch_matmul_NT[51], placeholder1[51], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[51], T_batch_matmul_NT[51], placeholder1[51], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[51], T_batch_matmul_NT[51], placeholder1[51], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity])) {
    switch (sample_52_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[52], T_batch_matmul_NT[52], placeholder1[52], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[52], T_batch_matmul_NT[52], placeholder1[52], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[52], T_batch_matmul_NT[52], placeholder1[52], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity])) {
    switch (sample_53_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[53], T_batch_matmul_NT[53], placeholder1[53], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[53], T_batch_matmul_NT[53], placeholder1[53], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[53], T_batch_matmul_NT[53], placeholder1[53], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity])) {
    switch (sample_54_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[54], T_batch_matmul_NT[54], placeholder1[54], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[54], T_batch_matmul_NT[54], placeholder1[54], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[54], T_batch_matmul_NT[54], placeholder1[54], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity])) {
    switch (sample_55_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[55], T_batch_matmul_NT[55], placeholder1[55], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[55], T_batch_matmul_NT[55], placeholder1[55], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[55], T_batch_matmul_NT[55], placeholder1[55], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity])) {
    switch (sample_56_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[56], T_batch_matmul_NT[56], placeholder1[56], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[56], T_batch_matmul_NT[56], placeholder1[56], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[56], T_batch_matmul_NT[56], placeholder1[56], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity])) {
    switch (sample_57_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[57], T_batch_matmul_NT[57], placeholder1[57], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[57], T_batch_matmul_NT[57], placeholder1[57], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[57], T_batch_matmul_NT[57], placeholder1[57], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity])) {
    switch (sample_58_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[58], T_batch_matmul_NT[58], placeholder1[58], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[58], T_batch_matmul_NT[58], placeholder1[58], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[58], T_batch_matmul_NT[58], placeholder1[58], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity])) {
    switch (sample_59_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[59], T_batch_matmul_NT[59], placeholder1[59], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[59], T_batch_matmul_NT[59], placeholder1[59], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[59], T_batch_matmul_NT[59], placeholder1[59], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity])) {
    switch (sample_60_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[60], T_batch_matmul_NT[60], placeholder1[60], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[60], T_batch_matmul_NT[60], placeholder1[60], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[60], T_batch_matmul_NT[60], placeholder1[60], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity])) {
    switch (sample_61_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[61], T_batch_matmul_NT[61], placeholder1[61], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[61], T_batch_matmul_NT[61], placeholder1[61], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[61], T_batch_matmul_NT[61], placeholder1[61], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity] + capacity_dims[sample_62_capacity])) {
    switch (sample_62_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[62], T_batch_matmul_NT[62], placeholder1[62], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[62], T_batch_matmul_NT[62], placeholder1[62], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[62], T_batch_matmul_NT[62], placeholder1[62], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity]), threadIdx.x);
      }
    }
  }
  else if (blockIdx.x < (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity] + capacity_dims[sample_62_capacity] + capacity_dims[sample_63_capacity])) {
    switch (sample_63_capacity) {
      case 0: {
        default_function_kernel0_block_0(placeholder[63], T_batch_matmul_NT[63], placeholder1[63], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity] + capacity_dims[sample_62_capacity]), threadIdx.x);
      }
      case 1: {
        default_function_kernel0_block_1(placeholder[63], T_batch_matmul_NT[63], placeholder1[63], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity] + capacity_dims[sample_62_capacity]), threadIdx.x);
      }
      case 2: {
        default_function_kernel0_block_2(placeholder[63], T_batch_matmul_NT[63], placeholder1[63], shared_buffer, blockIdx.x - (capacity_dims[sample_0_capacity] + capacity_dims[sample_1_capacity] + capacity_dims[sample_2_capacity] + capacity_dims[sample_3_capacity] + capacity_dims[sample_4_capacity] + capacity_dims[sample_5_capacity] + capacity_dims[sample_6_capacity] + capacity_dims[sample_7_capacity] + capacity_dims[sample_8_capacity] + capacity_dims[sample_9_capacity] + capacity_dims[sample_10_capacity] + capacity_dims[sample_11_capacity] + capacity_dims[sample_12_capacity] + capacity_dims[sample_13_capacity] + capacity_dims[sample_14_capacity] + capacity_dims[sample_15_capacity] + capacity_dims[sample_16_capacity] + capacity_dims[sample_17_capacity] + capacity_dims[sample_18_capacity] + capacity_dims[sample_19_capacity] + capacity_dims[sample_20_capacity] + capacity_dims[sample_21_capacity] + capacity_dims[sample_22_capacity] + capacity_dims[sample_23_capacity] + capacity_dims[sample_24_capacity] + capacity_dims[sample_25_capacity] + capacity_dims[sample_26_capacity] + capacity_dims[sample_27_capacity] + capacity_dims[sample_28_capacity] + capacity_dims[sample_29_capacity] + capacity_dims[sample_30_capacity] + capacity_dims[sample_31_capacity] + capacity_dims[sample_32_capacity] + capacity_dims[sample_33_capacity] + capacity_dims[sample_34_capacity] + capacity_dims[sample_35_capacity] + capacity_dims[sample_36_capacity] + capacity_dims[sample_37_capacity] + capacity_dims[sample_38_capacity] + capacity_dims[sample_39_capacity] + capacity_dims[sample_40_capacity] + capacity_dims[sample_41_capacity] + capacity_dims[sample_42_capacity] + capacity_dims[sample_43_capacity] + capacity_dims[sample_44_capacity] + capacity_dims[sample_45_capacity] + capacity_dims[sample_46_capacity] + capacity_dims[sample_47_capacity] + capacity_dims[sample_48_capacity] + capacity_dims[sample_49_capacity] + capacity_dims[sample_50_capacity] + capacity_dims[sample_51_capacity] + capacity_dims[sample_52_capacity] + capacity_dims[sample_53_capacity] + capacity_dims[sample_54_capacity] + capacity_dims[sample_55_capacity] + capacity_dims[sample_56_capacity] + capacity_dims[sample_57_capacity] + capacity_dims[sample_58_capacity] + capacity_dims[sample_59_capacity] + capacity_dims[sample_60_capacity] + capacity_dims[sample_61_capacity] + capacity_dims[sample_62_capacity]), threadIdx.x);
      }
    }
  }
}
} // extern "C"

int main(int argc, char const *argv[])
{
  /* code */
  return 0;
}
